
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{p4doc}[2003/08/27 v0.1 P4 style customization]
\RequirePackage{fourier}
\RequirePackage[scaled=0.8]{luximono}
\RequirePackage{helvet}
\RequirePackage{color}
\RequirePackage{colortbl}
\usepackage{changepage}
\usepackage{xifthen}
\usepackage{xcolor}
\usepackage{calc}
\usepackage{relsize}
\usepackage{xspace}

\definecolor{bnfgreen}{HTML}{E6FFD4}
\definecolor{codeblue}{HTML}{DEF0FE}
\definecolor{actionorange}{HTML}{FFEFC3}

% This accumulates the BNF for final summary

% Section types for this paper

% support for generating PDF files
\usepackage{ifpdf}
% produce nice footers
\RequirePackage[bottom,multiple,stable]{footmisc} % flushmargin,norule removed

% produce nice headings

%% set latex/pdflatex specific stuff
\ifpdf
    \RequirePackage{hyperref}
    [
                pdftex,
                hyperindex,
                plainpages=false,
                breaklinks,
                colorlinks,
                citecolor=black,
                filecolor=black,
                linkcolor=black,
                pagecolor=black,
                urlcolor=blue
    ]
    \RequirePackage{graphicx,color}
    \DeclareGraphicsExtensions{.jpg,.pdf}
    \pdfcatalog {
        /PageMode (/UseNone)
    }
    \RequirePackage{thumbpdf}
\else
    \RequirePackage{hyperref}
    \RequirePackage{graphicx}
    \DeclareGraphicsExtensions{.eps,.jpg}
\fi

\RequirePackage{listings}

% scala language description
\lstdefinelanguage{BNF}{%
    alsoletter={-},%
    sensitive,%
}[keywords,comments]%


% scala language description
\lstdefinelanguage{P4}{%
    morekeywords={%
      action, algorithm, apply, attributes, bytes,
      calculated_field, control, counter, current, default, direct,
      drop, extract, else, false, field_list, field_list_calculation, fields,
      header, header_type, hit, if, in, inout, input, instance_count, last, latest,
      layout, length, mask, max_length, metadata, meter, min_width, miss
      output_width, out, packets, parse_error, parser, parser_exception, payload,
      primitive_action, register, result, return, saturating, select, signed, static, state, start, switch,transition, true, type, update, valid, verify, width},
    sensitive,%
    breaklines=true,
    numbers=left,
    numberstyle=\scriptsize,
    stepnumber=1,
    numbersep=8pt,
    frame=single,
    %leftmargin=1pt,
    columns=fullflexible,
    keywordstyle=\slshape\large\sffamily\color{violet},
    basicstyle=\ttfamily,
    %morecomment=[l]//,%
    %morecomment=[s]{/*}{*/},%
}[keywords,comments]%

% activate the language and predefine settings
\lstset{%
    aboveskip=3mm,%
    belowskip=3mm,%
    keepspaces=true,%
    breaklines=true,
    columns=fullflexible,
    keywordstyle=\slshape\large\ttfamily\color{violet},%
    backgroundcolor=\color{codeblue},
    commentstyle=\itshape,%
    basicstyle=\sffamily\normalsize,
    numbers=left,
    frame=single,
    firstnumber=auto,
    framerule=0.3pt,%
    numbersep=1.5mm,%
    numberstyle=\tiny,%
}


% Primitive action macros

% Parameter documentation inside of a prim action declaration
\newcommand{\paramdoc}[2]{\texttt{#1} & #2 \\ }

\newcommand{\matchaction}{match\raise.30ex\hbox{\smaller{+}}{\allowbreak}action\xspace}
\newcommand{\Matchaction}{Match\raise.30ex\hbox{\smaller{+}}{\allowbreak}action\xspace}
\newcommand{\MatchAction}{Match\raise.30ex\hbox{\smaller{+}}{\allowbreak}Action\xspace}

% Define a primitive action
%   Macro params are:  name, summary, parameters, description
%   Parameters (for action) is a sequence of \paramdoc decs

\endinput
